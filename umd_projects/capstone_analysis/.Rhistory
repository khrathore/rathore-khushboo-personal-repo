all_topics_type <- all_clean %>%
group_by(topic_b, story_type) %>%
count() %>%
mutate(countb = case_when(
is.na(topic_b)~0,
TRUE~n
)) %>%
rename(topic = topic_b) %>%
select(-n) %>%
full_join(topic_atype, by = c("topic", "story_type")) %>%
mutate(counta = case_when(
is.na(counta)~0,
TRUE~counta
)) %>%
mutate(countb = case_when(
is.na(countb)~0,
TRUE~countb
)) %>%
mutate(count = counta + countb) %>%
select(topic, story_type, count) %>%
left_join(all_topics, by = "topic") %>%
mutate(percent = round(count/full_count*100,2))
write_sheet(all_topics_type, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=224583311", sheet = "topics_by_type")
authors <- all_clean %>%
group_by(author) %>%
count() %>%
rename(count = n) %>%
mutate(percent = round(count/total_stories*100,2))
write_sheet(authors, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=224583311", sheet = "author_roundup")
type <- all_clean %>%
group_by(story_type) %>%
count() %>%
rename(count = n) %>%
mutate(percent = round(count/total_stories*100,2))
write_sheet(type, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=224583311", sheet = "type_roundup")
count_papers <- nrow(all_papers)
areas_served <- all_papers %>%
group_by(publication_coverage) %>%
count() %>%
rename(count = n) %>%
mutate(percent = round(count/count_papers*100,2))
write_sheet(areas_served, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=1194646579", sheet = "by_coverage")
areas_located <- all_papers %>%
group_by(publication_location) %>%
count() %>%
rename(count = n) %>%
mutate(percent = round(count/count_papers*100,2))
write_sheet(areas_located, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=1194646579", sheet = "by_location")
coded_papers <- all_papers %>%
filter(coded == "a. coded")
coded_count <- nrow(coded_papers)
areas_served_coded <- coded_papers %>%
group_by(publication_coverage) %>%
count() %>%
rename(count = n) %>%
mutate(percent = round(count/coded_count*100,2))
write_sheet(areas_served_coded, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=1194646579", sheet = "coded_by_coverage")
areas_located_coded <- coded_papers %>%
group_by(publication_location) %>%
count() %>%
rename(count = n) %>%
mutate(percent = round(count/coded_count*100,2))
write_sheet(areas_located_coded, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=1194646579", sheet = "coded_by_location")
by_coded <- all_papers %>%
group_by(coded) %>%
count() %>%
rename(count = n) %>%
mutate(percent = round(count/count_papers*100,2))
write_sheet(by_coded, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=1194646579", sheet = "by_coding_status")
by_type <- all_papers %>%
group_by(type) %>%
count() %>%
rename(count = n) %>%
mutate(percent = round(count/count_papers*100,2))
write_sheet(by_type, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=1194646579", sheet = "by_pubtype")
by_type_coded <- coded_papers %>%
group_by(type) %>%
count() %>%
rename(count = n) %>%
mutate(percent = round(count/coded_count*100,2))
write_sheet(by_type_coded, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=1194646579", sheet = "by_pubtype_coded")
story_paper_join <- all_clean %>%
left_join(all_papers, by = "publication_name")
story_by_type <- story_paper_join %>%
filter(coded == "a. coded") %>%
group_by(type) %>%
count() %>%
rename(full_count = n)
author_type <- story_paper_join %>%
group_by(author, type) %>%
count() %>%
rename(count = n) %>%
left_join(story_by_type) %>%
mutate(percent = round(count/full_count*100,2))
write_sheet(author_type, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=1194646579", sheet = "by_author_and_type_coded")
story_type <- story_paper_join %>%
group_by(story_type, type) %>%
count() %>%
rename(subcount = n) %>%
left_join(story_by_type) %>%
mutate(percent = round(subcount/full_count*100,2))
write_sheet(story_type, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=1194646579", sheet = "by_story_and_type")
topic_atype_pub <- story_paper_join %>%
group_by(topic_a, type) %>%
count() %>%
mutate(counta = n) %>%
rename(topic = topic_a) %>%
select(-n)
all_topics_type_pub <-story_paper_join %>%
group_by(topic_b, type) %>%
count() %>%
mutate(countb = case_when(
is.na(topic_b)~0,
TRUE~n
)) %>%
rename(topic = topic_b) %>%
select(-n) %>%
full_join(topic_atype_pub, by = c("topic", "type")) %>%
mutate(counta = case_when(
is.na(counta)~0,
TRUE~counta
)) %>%
mutate(countb = case_when(
is.na(countb)~0,
TRUE~countb
)) %>%
mutate(count = counta + countb) %>%
left_join(story_by_type) %>%
mutate(percent = round(count/full_count*100,2)) %>%
select(topic, type, count, full_count, percent)
write_sheet(all_topics_type_pub, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=224583311", sheet = "topics_by_pubtype")
story_paper_join_coded <- all_clean %>%
left_join(all_papers, by = "publication_name")
story_by_type_coded <- story_paper_join_coded %>%
group_by(type) %>%
count() %>%
rename(full_count = n)
author_type_coded <- story_paper_join_coded %>%
group_by(author, type) %>%
count() %>%
rename(count = n) %>%
left_join(story_by_type_coded) %>%
mutate(percent = round(count/full_count*100,2))
write_sheet(author_type_coded, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=1194646579", sheet = "by_author_and_type_coded")
story_type_coded <- story_paper_join_coded %>%
group_by(story_type, type) %>%
count() %>%
rename(subcount = n) %>%
left_join(story_by_type_coded) %>%
mutate(percent = round(subcount/full_count*100,2))
write_sheet(story_type_coded, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=1194646579", sheet = "by_story_and_type_coded")
topic_atype_pub_coded <- story_paper_join_coded %>%
group_by(topic_a, type) %>%
count() %>%
mutate(counta = n) %>%
rename(topic = topic_a) %>%
select(-n)
all_topics_type_pub_coded <-story_paper_join_coded %>%
group_by(topic_b, type) %>%
count() %>%
mutate(countb = case_when(
is.na(topic_b)~0,
TRUE~n
)) %>%
rename(topic = topic_b) %>%
select(-n) %>%
full_join(topic_atype_pub_coded, by = c("topic", "type")) %>%
mutate(counta = case_when(
is.na(counta)~0,
TRUE~counta
)) %>%
mutate(countb = case_when(
is.na(countb)~0,
TRUE~countb
)) %>%
mutate(count = counta + countb) %>%
left_join(story_by_type) %>%
mutate(percent = round(count/full_count*100,2)) %>%
select(topic, type, count, full_count, percent)
write_sheet(all_topics_type_pub_coded, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=224583311", sheet = "topics_by_pubtype_coded")
daily_voice <- all_clean %>%
filter(publication_name == "Daily Voice")
daily_voice_count <- nrow(daily_voice)
story_type_daily <- daily_voice %>%
group_by(story_type) %>%
count() %>%
mutate(percent = round(n/daily_voice_count*100,2))
write_sheet(story_type_daily, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=224583311", sheet = "daily_voice_story_type")
topica_dv <- daily_voice %>%
group_by(topic_a) %>%
count() %>%
mutate(counta = n) %>%
rename(topic = topic_a) %>%
select(-n)
all_topics_dv <- daily_voice %>%
group_by(topic_b) %>%
count() %>%
mutate(countb = case_when(
is.na(topic_b)~0,
TRUE~n
)) %>%
rename(topic = topic_b) %>%
select(-n) %>%
full_join(topica_dv, by = c("topic")) %>%
mutate(countb = case_when(
is.na(countb)~0,
TRUE~countb
)) %>%
mutate(counta = case_when(
is.na(counta)~0,
TRUE~counta
)) %>%
mutate(count = counta + countb) %>%
mutate(percent = round(count/daily_voice_count*100,2)) %>%
select(topic, count, percent)
write_sheet(all_topics_dv, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=224583311", sheet = "daily_voice_topics")
patch_stories <- all_clean %>%
filter(publication_name == "Patch Maryland")
patch_count <- nrow(patch_stories)
story_type_patch <- patch_stories %>%
group_by(story_type) %>%
count() %>%
mutate(percent = round(n/patch_count*100,2))
write_sheet(story_type_patch, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=224583311", sheet = "story_type_patch")
topica_patch <- patch_stories %>%
group_by(topic_a) %>%
count() %>%
mutate(counta = n) %>%
rename(topic = topic_a) %>%
select(-n)
all_topics_patch <- patch_stories %>%
group_by(topic_b) %>%
count() %>%
mutate(countb = case_when(
is.na(topic_b)~0,
TRUE~n
)) %>%
rename(topic = topic_b) %>%
select(-n) %>%
full_join(topica_patch, by = c("topic")) %>%
mutate(countb = case_when(
is.na(countb)~0,
TRUE~countb
)) %>%
mutate(counta = case_when(
is.na(counta)~0,
TRUE~counta
)) %>%
mutate(count = counta + countb) %>%
mutate(percent = round(count/patch_count*100,2)) %>%
select(topic, count, percent)
write_sheet(all_topics_patch, "https://docs.google.com/spreadsheets/d/1G7tBh6SGUi_KPn1JzZYuzLQpmgCPlVlEgO72e8RZo9Y/edit#gid=224583311", sheet = "patch_story_topics")
#install.packages("xml2")
#install.packages("lubridate")
#install.packages("tidyr")
#install.packages("tidyverse")
#install.packages("dplyr")
#install.packages("XML")
#install.packages("purrr")
#install.packages("furrr")
#install.packages('remotes')
#remotes::install_github("mkearney/dapr")
#remotes::install_url("https://cran.r-project.org/src/contrib/Archive/tfse/tfse_0.5.0.tar.gz")
#remotes::install_github("mkearney/ppcong")
#install.packages("stringi")
#install.packages('fuzzyjoin')
library(xml2)
library(methods)
library(tidyverse)
library(XML)
library(furrr)
library(stringi)
library(httr)
library(rlang)
library(janitor)
library(paws)
library(aws.s3)
library(tools)
library(pdftools)
library(sys)
library(ppcong)
library(jsonlite)
library(fuzzyjoin)
state_employee_clean <- state_employee %>%
clean_names() %>%
select(total_salary_paid, fiscal_year, place_of_residence, base_salary) %>%
mutate(name = str_to_title(place_of_residence)) %>%
inner_join(all_counties, by = "name") %>%
mutate(base_salary = as.double(gsub("[^0-9.]", "", base_salary))) %>%
mutate(base_salary = case_when(
is.na(base_salary) ~ 0,
TRUE ~ base_salary
)) %>%
mutate(total_salary_paid = case_when(
is.na(total_salary_paid) ~ base_salary,
total_salary_paid == 0 ~ base_salary,
TRUE ~ total_salary_paid
)) %>%
rename(year = fiscal_year) %>%
filter(year < 2023) %>%
group_by(name, year) %>%
summarize(
count_salary_employee = n(),
median_salary_employee = median(total_salary_paid),
mean_salary_employee = mean(total_salary_paid)
)
employee_overall <- all_income_clean %>%
full_join(state_employee_clean, by = c("name", "year")) %>%
mutate(mean_diff = value - mean_salary_employee) %>%
mutate(median_diff = value - median_salary_employee) %>%
left_join(all_counties, by = "name")
library(tidyverse)
library(janitor)
library(lubridate)
state_employee <- read_csv("State_of_Iowa_Salary_Book.csv")
setwd("~/GitHub/rathore-khushboo-personal-repo/umd_projects/capstone_analysis")
library(tidyverse)
library(janitor)
library(lubridate)
state_employee <- read_csv("State_of_Iowa_Salary_Book.csv")
all_income <- read_csv("Annual_Personal_Income_for_State_of_Iowa_by_County.csv")
all_income_clean <- all_income %>%
clean_names() %>%
mutate(date = mdy(date)) %>%
mutate(year = year(date)) %>%
filter(year >= 2007) %>%
filter(variable_code == "CAINC1-3") %>%
select(name, year, value)
all_counties <- all_income %>%
clean_names() %>%
distinct(name, geography_id)
state_employee_clean <- state_employee %>%
clean_names() %>%
select(total_salary_paid, fiscal_year, place_of_residence, base_salary) %>%
mutate(name = str_to_title(place_of_residence)) %>%
inner_join(all_counties, by = "name") %>%
mutate(base_salary = as.double(gsub("[^0-9.]", "", base_salary))) %>%
mutate(base_salary = case_when(
is.na(base_salary) ~ 0,
TRUE ~ base_salary
)) %>%
mutate(total_salary_paid = case_when(
is.na(total_salary_paid) ~ base_salary,
total_salary_paid == 0 ~ base_salary,
TRUE ~ total_salary_paid
)) %>%
rename(year = fiscal_year) %>%
filter(year < 2023) %>%
group_by(name, year) %>%
summarize(
count_salary_employee = n(),
median_salary_employee = median(total_salary_paid),
mean_salary_employee = mean(total_salary_paid)
)
employee_overall <- all_income_clean %>%
full_join(state_employee_clean, by = c("name", "year")) %>%
mutate(mean_diff = value - mean_salary_employee) %>%
mutate(median_diff = value - median_salary_employee) %>%
left_join(all_counties, by = "name")
write_csv(employee_overall, "employment_comparison.csv")
pivot_wider(names_from = year, values_from = median_diff)
pivot_wider(names_from = "year", values_from = "median_diff")
pivot_wider(names_from = year, values_from = median_diff)
employee_yearpivot <- employee_overall %>%
select(name, year, geographic_id, median_diff) %>%
pivot_wider(names_from = year, values_from = median_diff)
employee_yearpivot <- employee_overall %>%
select(name, year, geography_id, median_diff) %>%
pivot_wider(names_from = year, values_from = median_diff)
View(employee_yearpivot)
write_csv(employee_yearpivot, "income_pivot.csv")
state_employee_clean <- state_employee %>%
clean_names() %>%
select(total_salary_paid, fiscal_year, place_of_residence, base_salary) %>%
mutate(name = str_to_title(place_of_residence)) %>%
mutate(name = case_when(
str_detect(name, "Brien") ~ "O'Brien",
TRUE ~ name
))
inner_join(all_counties, by = "name") %>%
mutate(base_salary = as.double(gsub("[^0-9.]", "", base_salary))) %>%
mutate(base_salary = case_when(
is.na(base_salary) ~ 0,
TRUE ~ base_salary
)) %>%
mutate(total_salary_paid = case_when(
is.na(total_salary_paid) ~ base_salary,
total_salary_paid == 0 ~ base_salary,
TRUE ~ total_salary_paid
)) %>%
rename(year = fiscal_year) %>%
filter(year < 2023) %>%
group_by(name, year) %>%
summarize(
count_salary_employee = n(),
median_salary_employee = median(total_salary_paid),
mean_salary_employee = mean(total_salary_paid)
)
employee_overall <- all_income_clean %>%
full_join(state_employee_clean, by = c("name", "year")) %>%
mutate(mean_diff = value - mean_salary_employee) %>%
mutate(median_diff = value - median_salary_employee) %>%
left_join(all_counties, by = "name")
employee_yearpivot <- employee_overall %>%
select(name, year, geography_id, median_diff) %>%
pivot_wider(names_from = year, values_from = median_diff)
write_csv(employee_overall, "employment_comparison.csv")
write_csv(employee_yearpivot, "income_pivot.csv")
state_employee_clean <- state_employee %>%
clean_names() %>%
select(total_salary_paid, fiscal_year, place_of_residence, base_salary) %>%
mutate(name = str_to_title(place_of_residence)) %>%
mutate(name = case_when(
str_detect(name, "Brien") ~ "O'Brien",
TRUE ~ name
)) %>%
inner_join(all_counties, by = "name") %>%
mutate(base_salary = as.double(gsub("[^0-9.]", "", base_salary))) %>%
mutate(base_salary = case_when(
is.na(base_salary) ~ 0,
TRUE ~ base_salary
)) %>%
mutate(total_salary_paid = case_when(
is.na(total_salary_paid) ~ base_salary,
total_salary_paid == 0 ~ base_salary,
TRUE ~ total_salary_paid
)) %>%
rename(year = fiscal_year) %>%
filter(year < 2023) %>%
group_by(name, year) %>%
summarize(
count_salary_employee = n(),
median_salary_employee = median(total_salary_paid),
mean_salary_employee = mean(total_salary_paid)
)
employee_overall <- all_income_clean %>%
full_join(state_employee_clean, by = c("name", "year")) %>%
mutate(mean_diff = value - mean_salary_employee) %>%
mutate(median_diff = value - median_salary_employee) %>%
left_join(all_counties, by = "name")
employee_yearpivot <- employee_overall %>%
select(name, year, geography_id, median_diff) %>%
pivot_wider(names_from = year, values_from = median_diff)
write_csv(employee_overall, "employment_comparison.csv")
write_csv(employee_yearpivot, "income_pivot.csv")
View(employee_overall)
View(state_employee_clean)
View(state_employee)
state_employee_clean <- state_employee %>%
clean_names() %>%
select(total_salary_paid, fiscal_year, place_of_residence, base_salary) %>%
mutate(name = str_to_title(place_of_residence))
View(state_employee_clean)
state_employee_clean <- state_employee %>%
clean_names() %>%
select(total_salary_paid, fiscal_year, place_of_residence, base_salary) %>%
mutate(name = str_to_title(place_of_residence)) %>%
mutate(name = case_when(
str_detect(name, "brien") ~ "O'Brien",
TRUE ~ name
)) %>%
inner_join(all_counties, by = "name") %>%
mutate(base_salary = as.double(gsub("[^0-9.]", "", base_salary))) %>%
mutate(base_salary = case_when(
is.na(base_salary) ~ 0,
TRUE ~ base_salary
)) %>%
mutate(total_salary_paid = case_when(
is.na(total_salary_paid) ~ base_salary,
total_salary_paid == 0 ~ base_salary,
TRUE ~ total_salary_paid
)) %>%
rename(year = fiscal_year) %>%
filter(year < 2023) %>%
group_by(name, year) %>%
summarize(
count_salary_employee = n(),
median_salary_employee = median(total_salary_paid),
mean_salary_employee = mean(total_salary_paid)
)
employee_overall <- all_income_clean %>%
full_join(state_employee_clean, by = c("name", "year")) %>%
mutate(mean_diff = value - mean_salary_employee) %>%
mutate(median_diff = value - median_salary_employee) %>%
left_join(all_counties, by = "name")
employee_yearpivot <- employee_overall %>%
select(name, year, geography_id, median_diff) %>%
pivot_wider(names_from = year, values_from = median_diff)
write_csv(employee_overall, "employment_comparison.csv")
write_csv(employee_yearpivot, "income_pivot.csv")
employee_overall <- all_income_clean %>%
full_join(state_employee_clean, by = c("name", "year")) %>%
mutate(median_diff = value - median_salary_employee) %>%
left_join(all_counties, by = "name")
View(employee_overall)
employee_overall <- all_income_clean %>%
full_join(state_employee_clean, by = c("name", "year")) %>%
mutate(median_diff = value - median_salary_employee) %>%
left_join(all_counties, by = "name")
employee_overall <- all_income_clean %>%
full_join(state_employee_clean, by = c("name", "year")) %>%
mutate(median_diff = value - median_salary_employee - median_salary_employee) %>%
left_join(all_counties, by = "name")
employee_overall <- all_income_clean %>%
full_join(state_employee_clean, by = c("name", "year")) %>%
mutate(median_diff = median_salary_employee - value) %>%
left_join(all_counties, by = "name")
employee_yearpivot <- employee_overall %>%
select(name, year, geography_id, median_diff) %>%
pivot_wider(names_from = year, values_from = median_diff)
write_csv(employee_overall, "employment_comparison.csv")
write_csv(employee_yearpivot, "income_pivot.csv")
